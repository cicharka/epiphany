---
- name: Patch stateful apps
  when:
    - inventory_hostname == groups.kubernetes_master[0]
  block:
    - name: k8s/master | Patch rabbitmq's statefulset
      include_role:
        name: upgrade
        tasks_from: kubernetes/utils/patch-statefulset.yml
      vars:
        image_regexp: 'rabbitmq:.*'

    - command: kubectl get statefulsets --all-namespaces --output json
      register: command_get_statefulsets
      changed_when: false

    - command: kubectl delete pods --namespace {{ item }} --all
      loop: "{{ _namespaces }}"
      when: _namespaces | length > 0
      vars:
        _namespaces: >-
          {%- set output = [] -%}
          {%- for item in (command_get_statefulsets.stdout | from_json)["items"] -%}
            {%- for container in item.spec.template.spec.containers -%}
              {%- if '/rabbitmq:' in container.image -%}
                {{- output.append(item.metadata.namespace) -}}
              {%- endif -%}
            {%- endfor -%}
          {%- endfor -%}
          {{- output | unique -}}

    - name: k8s/master | Patch keycloak's statefulset
      include_role:
        name: upgrade
        tasks_from: kubernetes/utils/patch-statefulset.yml
      vars:
        image_regexp: '.*/keycloak:.*'

- name: Drain nodes in preparation for maintenance
  when:
    - groups.kubernetes_node is defined
    - groups.kubernetes_node | length > 0
  block:
    - name: Wait for kube-apiserver
      include_role:
        name: upgrade
        tasks_from: kubernetes/utils/wait-for-kube-apiserver.yml
        apply:
          delegate_to: >-
            {{ inventory_hostname if inventory_hostname in groups.kubernetes_master else
               groups.kubernetes_master[0] }}

    - name: Include get-kubelet-version.yml
      include_role:
        name: upgrade
        tasks_from: kubernetes/get-kubelet-version.yml
        apply:
          delegate_to: "{{ groups.kubernetes_master[0] }}"

    - name: Set kubelet version as fact
      set_fact:
        initial_kubelet_version: "{{ kubelet_version.stdout[1:] }}"

    - name: Drain {{ inventory_hostname }}
      include_role:
        name: upgrade
        tasks_from: kubernetes/utils/drain.yml
      vars:
        version: "{{ initial_kubelet_version }}"

- name: Get information on installed packages
  package_facts:
    manager: auto

- name: Stop involved services before Docker removal
  block:
    - name: Stop Kubelet
      systemd:
        name: kubelet
        state: stopped

    - name: Stop Docker
      systemd:
        name: kubelet
        state: stopped
        enabled: false
      when:
        - inventory_hostname not in groups.image_registry
        - ansible_facts.packages['docker-ce'] is defined

- name: Install containerd.io package
  package:
    name: "{{ _packages[ansible_os_family] }}"
    state: present
  vars:
    _packages:
      Debian:
        - containerd.io={{ containerd_version }}-*
      RedHat:
        - containerd.io-{{ containerd_version }}
  module_defaults:
    yum: { lock_timeout: "{{ yum_lock_timeout }}",
           allow_downgrade: true }
    apt: { allow_downgrade: true }

- name: Configure prerequisites
  include_tasks: configure-prerequisites.yml

- name: Configure containerd
  include_tasks: configure-containerd.yml

- name: Configure kubelet-env
  include_tasks: configure-kubelet-env.yml

# There are already bandlers responsible for restart of these services however it is required
# to restart them earlier, before uncordoning the hosts
- name: Restart containerd
  systemd:
    name: containerd
    state: restarted
    enabled: true

- name: Restart kubelet
  systemd:
    name: kubelet
    state: restarted
    enabled: true

- name: Provide crictl.yaml file
  copy:
    src: crictl.yaml
    dest: /etc/crictl.yaml
    owner: root
    group: root
    mode: u=rw,go=r

- name: Remove Docker
  include_role:
    name: docker
    tasks_from: remove-docker.yml
  when:
    - inventory_hostname not in groups.image_registry
    - ansible_facts.packages['docker-ce'] is defined

- name: Wait for cluster's readiness
  include_role:
    name: upgrade
    tasks_from: kubernetes/utils/wait.yml

- name: Uncordon master or node - mark as schedulable
  when:
    - groups.kubernetes_node is defined
    - groups.kubernetes_node | length > 0
  include_role:
    name: upgrade
    tasks_from: kubernetes/utils/uncordon.yml
